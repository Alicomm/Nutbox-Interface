module.exports = {
  commen: {
    userlogin: 'Login',
    steemAccoutPlaceHolder: 'Steem Account',
    hiveAccountPlaceHolder: 'Hive account',
    login: 'Login',
    loging: 'Logining...',
    cancel: 'Cancel',
    confirm: 'Confirm',
    add: 'Add',
    update: 'Update',
    crowdstaking: "Crowdstaking",

    apy: 'APY',
    withdraw: 'Harvest',
    balance: 'Balance',
    approveContract: "Approve Contract",
    max: 'Max',
    delegatecharge: 'Delegate Charge',
    logout: 'Log out',
    input: 'Input',
    copy: 'Copy',
    complete: 'Complete',
    now: 'Now',

    whitePaper: 'White Paper',
    nps: 'Nutbox Proposal System',
    contract: 'Contract Address',
    docs: 'Docs',
    discord: 'Discord',
    blog: 'Blog',
    contractAddr: 'Contract Address',
    search:'Search',
    dashboard: "Dashboard",
    language: 'Language',
    zh: '中文',
    en: 'English',
    kr: '한국어',
    my: 'Malaysia',
    tr: 'Türkçe',
    es: 'Español',
    jp: '日本語'
  },
  tutorial:{
    createProcess: 'Create Process',
    step0: 'Step0: Register Asset',
    step1: 'Step1: Choose asset & Set distribution strategy',
    step2: 'Step2: Fill in community info',
    step3: 'Step3: Create staking pool',
    demoVideo: 'Demo Video',
    getStart: 'Get Started',
    watchVideo: "Watch Demo Video",
    videoTip1: "In this video, we will walk you through the staking pool generation process, from start to finish. It takes less than {min} minutes.",
    videoTip2: "Click on the play button to start the video"
  },
  wallet: {
    wallet: 'Wallet',
    connectSteem: "Connect Steem Wallet",
    connectHive: "Connect Hive Wallet",
    install: "Install",
    transfer: "Transfer",
    asset: "Asset",
    nomination: "Vote Delegators ",
    contribution: "Crowdloan",
    balance: "balance",
    bond: "Bonding",
    unBond: "Unbonding",
    redeem: "Redeem",
    bindAmount: "Binding Amount",
    inputAmount: 'Input Amount',
    receiveAddress: 'Receiver Address',
    transferAmount: 'Transfer Amount',
    unbindAmount: 'Unbinding amount'
  },
  cs: {
    crowdstaking: "Crowdstaking",
    community: "Community",
    nominate: "Vote",
    nominated: "Voted",
    bond: "Bonding",
    available: "Availabe Catiptal",
    bondAndNominate: " Bonding and Vote",
    cancel: "Cancel",
    bondInfo1: "Please retain some amount of cryptocurrencies for further transaction fees",
    bondInfo2: "The recommend binding amount is {min} {symbol}.",
    bondInfo3: "The unbinding process will take {days} day.",
    confirm: "Confirm",
    cancelValidorsInfo: "Please cancel at least {} nodes you voted, before you vote other nodes"
  },
  validator: {
    validator: 'Validator',
    commission: "Commission",
    otherStake: "Others' staking",
    ownStake: "Myself staking",
    waiting: "Waiting"
  },
  date: {
    year: ' Year ',
    month: ' Month ',
    day: ' Day ',
    hour: ' Hour ',
    min: ' Minute ',
    sec: ' Second '
  },
  cl: {
    crowdloan: 'Crowdloan',
    community: "Community",
    contribute: "Contribute",
    withdraw: "Withdraw",
    youWillWithdraw: "You Would Withdraw",
    confirm: "Comfirm & Sign",
    amount: "Amount",
    inputAmount: "Staking amount",
    nominator: "Nominator",
    inputNominator: "Your Nominator's address",
    optional: "(Optional)",
    completed: "Completed",
    leasePeriod: "Lease Period",
    countDown: "Countdown",
    rewards: 'Rewards',
    auctionPlan: "Crowdloan Reward",
    auctionInfo: "Crowdloan Detail",
    joinAuction: "Join Crowdloan",
    raised: "Raised",
    fund: "Fund",
    progress: 'Progress',
    contributors:"Contributors",
    contributed: "My Contribution",
    myBalance: "Balance of {token}",
    Active: "Active",
    Retired: "Retired",
    Completed: "Completed",
    chain: "Chain",
    trieIndex: "TrieIndex",
    contributeAmount: 'Contribute amount',
    contributeTime: 'Contribute time'
  },
  transaction: {
    broadcasting: "Transaction Is Broadcasting.",
    inBlock: "Transaction included at blockHash.",
    contributeOk: "Contribution Success!",
    withdrawOk: "Withdraw Success!",
    nominateOk: "Nominate Success!",
    transactionOk:"Transaction Success!",
    depositOk:"Deposit Success",
    withdrawOk:'Decrease Deposit Success!'
  },
  stake: {
    stake: 'Staking Mining',
    creaseDelegation: "Delegate",
    increaseDelegation: "Undelegate",
    getSp: "Get SP",
    get: "Get",
    stake: "Deposit",
    unStake: "Undeposit",
  },
  tip: {
    approveSuccess:'Approval Success',
    loading: "Loading, Please wait",
    connectingPolkadot:"Connecting Polkadot network",
    noAuction: "No onging Auction ", 
    noProject: "No ongoing Project",
    noNominations: "No Nominators Nodes",
    noContribuitons: "No Contribution Records",
    noCommunities: "No Registerd Communities ",
    noCrowdloan: "No ongoing Crwodloan",
    noStakingProject: "No validators",
    tokenSafeTip: "Your asset would be locked into {symbol} official crowdloan pallet directly, not any accounts of Nutobx.",
    belowMinContribution: "Input is less than the minimum allowed contribution of  {min}",
    belowMinBond: "Input is less than the minimum surggest bonded of 0.1",
    wrongNominatorAddress: "Wrong Nominator Address",
    wrongTransferAddress: "Wrong Transfer Address",
    inputAddressType: "Please Input {relaychain} Address",
    insufficientBalance: "Insufficient Balance",
    outOfCap: "Out of cap",
    tips: "Tips",
    error: "Error！",
    success: "Success!",
    warning: "Warning！",
    noNeedWithdraw: 'No Need To Withdraw',
    comingSoon: 'Coming Soon',
    clipboard:"Clipboard",
    copyAddress:"Copied address:  {address}",
    signing: "Signing",
    picUploadFail: "Pictrues fail to uplod, Please try again",
    uploadLogo: "Please upload logo",
    deloyTokenFail:"Token fail to deloy, Please try again",
    notContractAddress:"Pleae Provide Deloy Token Contract Address",
    registryAssetFail:"Registry Asset Fail",
    registryAssetSuccess: "Registry Asset Success",
    wrongStartBlockNum: "Start BlockNum must be larger than the current BlockNum",
    wrongStopBlockNum: "Stop BlcokNum must be larger than the Start BlockNum",
    youHaveCreatedCommunity: "You Have Created Community",
    pleaseFillData: "Please select delpoy asset and distribution policies",
    deployFactoryFail: "Factory Fail to delpoy, Please try agian",
    deployFactorySuccess:"Factory deloy Success, Please wait",
    deploySuccess: 'Deloy Success',
    storeTokenAddress: "Please confirm the information and store Token Address immediately",
    needName: "Please input Community Name",
    needWebsit: "Please input Community Website",
    needDescription: "Please input Community Desctiption",
    needIcon: "Please upload Community Logo",
    needPoster: "Please Upload Community Poster",
    completeCommunityInfoSuccess: "Community Information update successfully",
    wrongSubstrateAddress:"Please input correct {type} address",
    ratioError: "The total porpotion of Staking Pool is 100",
    wrongApy: "Please input correct APY",
    wrongRewardNum: "Please input correct rewards",
    createBlogSuccess: "Create Blog Success!"
  },
  nps: {
    nps: 'Governance',
    npsTemp: "Show Peanut governance for example. Walnut governance is under develoment.",
    pass: 'Passed',
    pending: 'Pending',
    unpass: 'Rejected',
    rolling: 'Voting'
  },
  error: {
    error: 'Error',
    depositFail: 'Deposit Fail',
    withdrawFail: 'Withdraw Fail',
    changeDepsitFail: 'Change deposition fail',
    delegateFail: 'Delegate fail',
    changeDelegateFail: 'Change delegation fail',
    approveFail: 'Approve fail',
    accountChanged: 'Steem and tron address mismatch，Please confirm whether the wallet account is switched',
    delegateerror: 'Delegation Error！',
    tryrefreshpage: 'Error，please refresh page and try again！',
    steemloginerr: 'Steem login failed!',
    needkeychainandtronlink: 'Need to install Steem Keychain and TronLink！',
    needkeychain: 'Please install Steem Keychain',
    needtronlink: 'Please install TronLink',
    insufficientEnerge: 'Not enough energy',
    transferFail: 'Transfer Fail',
    unlockKeychain: 'Please unlock Steem Keychain',
    unlockWallet: 'Plase unlock tronlink',
    steemLoginFail: 'Steem login fail',
    hiveLoginFail: 'Hive login fail',
    illegalTronAddress: 'Invalid tron address',
    inputError: 'Input wrong value',
    inputOverflow: 'Input overflow',
    inputOutOfRange: "Please input value between {lowerPnutAmount}-{upperPnutAmount}",
    inputLinkIllegal: "Please input correct link",
    transferFail: "Transfer fail",
    notEnoughFee: 'Insufficient fee',
    insufficentPnut: "Insufficient Pnut",
    hasVoted: "Your post has been voted by nutbox.mine",
    pleaseRetry: "Please try agian",
    signatureFailed: "Signature fail，Please refresh the page and retry",
    serveError: "Server Error",
    networkError: "Network Error",
    noStakingFactory: "You have not created a community yet",
    blockChainError: "Contract invocation error",
    cancelSigning: 'Signing cancel',
    unknow:"Unkonwn error",
    notConnectWallet: 'Wallet not Connect',
    unlockWallet: 'Please unlock Wallet',
    wrongChainId: 'Wrong ChainID',
    wrongETHAddress: "Wrong ETH Address",
    wrongInputDevRatio: "Please input number between 0-100",
    notTokenContract: "The address you input is not a ERC20 contract address."
  },
  community: {
    community: 'Community',
    percentage: 'Percentage',
    communityInfo: 'Community Information',
    edit:'Edit ',
    create:'Complete ',
    communityName: "Community Name",
    communityLink: "Community Link",
    communityDesc: "Community Description",
    communityLogo: "Community Logo",
    communityPoster: "Community Poster",
    communityBalance: "Community Balance",
    commit: 'Commit',
    inputName: "Please input Community Name",
    inputLink: "Please input Community Website Link",
    inputDesc: "Plese input Community Description ",
    inputApy: "Please input Apy",
    uploadLogo: "Upload Logo",
    picTip: "The recommended size is {size} ，smaller than 2M, support jpg、png、jpeg formats",
    uploadPoster: "Upload Poster",
    poster: "Poster",
    noCommunity:"You have no community yet",
    gotoCreate:"Go to create now",
    editTip:"Uploading community information requires the use of your wallet signature, this operation will not cost you anything, please rest assured to use。",
    sign: "Sign and upload the community information",
    createCommunity: "Create you exclusive staking economy",
    step1: 'Step 1',
    step2: 'Step 2',
    yourCTokenId: "Step 1：Choose an asset",
    settingTokenDistribution: "Step 2：Setting your asset distribution",
    tokenEra: "Asset distribution policy", 
    currentBlock: 'Current Block height',
    startBlock:'Start Block',
    inputStopBlock: 'Input Stop Block height',
    inputBlockReward: 'Input rewards per Block',
    stopBlock:'Stop Block',
    rewardAmount: 'Reward Amount',
    comfirmAdd:'Comfirm Add',
    personal: 'My personal registred asset',
    official: 'Officially provided asset',
    addPoolSuccess: 'Staking Pool successfully added',
    updatePoolSuccess: 'Staking Pool successfully updated',
    dashboard: "Dashboard",
    setting: 'Setting',
    updatePools: "Adjust Staking Pool data",
    addPool: 'Add Staking Pool',
    noPools:'No Staking Pools yet',
    userCount: "Number of users",
    totalDeposit: "TVL",
    totalDepositDollor: "Total amount of Staking Deposit",
    hasMined: "Token has Mined",
    more: 'More',
    join: 'Join',
    createYourCommunity: "Create Your Community",
    communityDashboard: "Manage Your Community",
    charge: "Charge",
    communityCharge: "Community Charge",
    confirmCharge: "Confirm Charfe",
    chargeSuccess: "Charge success",
    devAddress: "Community fund address",
    devRatio: 'Community commision ratio',
    inputDevRatio: 'Please input number between 0-100',
    inputDevAddress: 'Input community devAddress',
    publishPool: "Publish Staking Pool",
    publishBlog: 'Publish Blog',
    unPublished: "UnPublished",
    communityBlog: 'Community Blog',
    blogTag: 'Blog Tag',
    createBlog: 'Create community blog',
    createBlogMemo: 'Your blog tag and private key are listed below. Please preserve them carefully. We do not provide custody services. The process of blog account creation will consume your 3 STEEM as services fee.',
    blogMainPassword: 'Password',
    publishBlogSuccess: 'Publish Blog Successs!'
  },
  asset: {
    network: "Network",
    native: "Native asset",
    foreign:"Foreign asset",
    registerCtokenTitle: 'Register your community asset',
    registerTitle: 'Register your exclusive asset',
    yourSteemAccount: "Your Steem/Hive account",
    assetName: "Name this asset",
    assetProperties: "Asset properites",
    register: "Register",
    homeLocation: "Home Token location",
    tokenName: 'Token Name',
    tokenSymbol: 'Token Symblo',
    distributionAmount: 'Distribution amount',
    inputHomeLocation: "Please input ERC20 address",
    inputTokenName: "Please input token name",
    inputTokenSymbol: "Please input token symbol",
    inputDistributionAmount: "Please input distribution amount",
    notDeploy:"No Token yet?",
    deployOne:"Depoly one",
    deploy: 'Deploy',
    deployYourToken: 'Deploy one token',
    notRegister: "No registered asset yet？",
    registerOne:"Register one",
    registerCAsset: "Register community asset",
    inputAccount:"Please input your account",
    inputAssetName:"Please input asset name",
    parachainId: "ParahainID",
    inputParachainId: "Please input ParachainID",
    trieIndex: 'Trie Index',
    inputTrieIndex: 'Please input Trie Index',
    communityAddress: "Community address（Polkadot address）",
    inputCommunityAddress: 'Please input community polkdot address',
    endingBlock: "Asset valid date",
    inputEndingBlock: "Please input the ending block height when the asset is invalid",
    registerSteemTab: "Register TEEM/HIVE Steem binding asset",
    registerCrowdloanTab: "Register Polkadot/Kusma Crwodloan binding asset",
    registerValidatorTab: "Register olkadot/Kuama validaots node binding asset",
    validatorNodeAddress: "Validator node address",
    inputValidatorNode: "Please input validator node address",
    delegation: 'Delegation',
    crowdloan: 'Crowdloan',
    validator: 'Validator node',
    addPool: 'Add Staking Pool',
    updatePool: 'Adjust staking pool',
    poolRatios: 'Staking pool profit sharing ratio',
    poolInfo: 'Staking pool information',
    stakingAsset:'Staking asset',
    selectStakingAsset: 'Please select staking asset',
    isHomeAsset: "Home asset",
    isForeignAsset: "Foreign asset",
    poolName: 'Staking pool name',
    inputPoolName: "Please input staking pool name"
  }
}
